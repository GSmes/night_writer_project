class BrailleMap
  attr_reader :braille_map

  def initialize
    @braille_map = Hash.new
    @braille_map.merge!(lowercase)
    @braille_map.merge!(space)
    @braille_map.merge!(capital)
    @braille_map.merge!(pound)
    @braille_map.merge!(numbers)
    @braille_map.merge!(special)
  end

  def lowercase
    lower_case = {
                    "a" => ["0",".",".",".",".","."],
                    "b" => ["0",".","0",".",".","."],
                    "c" => ["0","0",".",".",".","."],
                    "d" => ["0","0",".","0",".","."],
                    "e" => ["0",".",".","0",".","."],
                    "f" => ["0","0","0",".",".","."],
                    "g" => ["0","0","0","0",".","."],
                    "h" => ["0",".","0","0",".","."],
                    "i" => [".","0","0",".",".","."],
                    "j" => [".","0","0","0",".","."],
                    "k" => ["0",".",".",".","0","."],
                    "l" => ["0",".","0",".","0","."],
                    "m" => ["0","0",".",".","0","."],
                    "n" => ["0","0",".","0","0","."],
                    "o" => ["0",".",".","0","0","."],
                    "p" => ["0","0","0",".","0","."],
                    "q" => ["0","0","0","0","0","."],
                    "r" => ["0",".","0","0","0","."],
                    "s" => [".","0","0",".","0","."],
                    "t" => [".","0","0","0","0","."],
                    "u" => ["0",".",".",".","0","0"],
                    "v" => ["0",".","0",".","0","0"],
                    "w" => [".","0","0","0",".","0"],
                    "x" => ["0","0",".",".","0","0"],
                    "y" => ["0","0",".","0","0","0"],
                    "z" => ["0",".",".","0","0","0"]
                    }
  end

  def numbers
    numbers = {
                "0" => [".","0","0","0",".","."],
                "1" => ["0",".",".",".",".","."],
                "2" => ["0",".","0",".",".","."],
                "3" => ["0","0",".",".",".","."],
                "4" => ["0","0",".","0",".","."],
                "5" => ["0",".",".","0",".","."],
                "6" => ["0","0","0",".",".","."],
                "7" => ["0","0","0","0",".","."],
                "8" => ["0",".","0","0",".","."],
                "9" => [".","0","0",".",".","."]
                }
  end

  def special
    special = {
                "!" => [".",".","0","0","0","."],
                "'" => [".",".",".",".","0","."],
                "," => [".",".","0",".",".","."],
                "-" => [".",".",".",".","0","0"],
                "." => [".",".","0","0",".","0"],
                "?" => [".",".","0",".","0","0"]
                }
  end

  def space
    space = {" " => [".",".",".",".",".","."]}
  end

  def capital
    capital = {"*" => [".",".",".",".",".","0"]}
  end

  def is_it_capital?
    capitals = ("A".."Z").to_a
  end

  def pound
    pound = {"#" => [".","0",".","0","0","0"]}
  end

  def letters_or_numbers
    ["j","a","b","c","d","e","f","g","h","i"]
  end
end
